//: # Aprendendo Swift
//:
//:Um grupo de bi√≥logos est√° pesquisando uma determinada esp√©cie de 
//: bact√©rias. Elas s√£o caracterizadas por se multiplicarem nas 
//: dire√ß√µes vertical e horizontal sempre que houver espa√ßo 
//: dispon√≠vel. Com o objetivo de prever experimentos, os bi√≥logos 
//: desejam implementar um programa para calcular quanto tempo uma 
//: dada col√¥nia de bact√©rias leva para se alastrar sobre alguns 
//: pontos de controle. Para isso, a entrada do programa ser√° uma 
//: foto microsc√≥pica da col√¥nia dividida em quadrantes. Existem tr√™s 
//: tipos poss√≠veis de regi√µes:
//:
//: - üëæ - Regi√µes j√° ocupadas por bact√©rias;
//: - üö© - Regi√µes onde se localizam os pontos de controle;
//: - üçû - Quaisquer outras regi√µes.
//:
//: A cada segundo, cada bact√©ria se multiplica, se houver espa√ßo, 
//: para duas regi√µes na horizontal (uma para direita e uma para 
//: esquerda) e duas regi√µes na vertical (uma acima e uma abaixo). 
//: No exemplo abaixo vemos a esquerda a forma√ßao inicial de uma
//: col√¥nia e nas imagens seguintes sua evolu√ß√£o nos 2 segundos
//: posteriores:

//: ![Col√¥nia](Colony.png)

//: Escreva um c√≥digo em Swift para calcular quantos segundos s√£o 
//: necess√°rios para que o primeiro ponto de controle seja atingido e 
//: para que todos os pontos sejam atingidos.
//:
//: **Dicas**:
//: - Voc√™ deve implementar a fun√ß√£o **execute** que recebe um array 
//: de Strings contendo em cada elemento umas das linhas da matriz da 
//: √°rea de teste. Esta fun√ß√£o retorna um dado do tipo **Output** com 
//: dois par√¢metros: o tempo de atinghimento do primeiro ponto de 
//: controle e o tempo para atingir todos os pontos. Sendo assim, se
//: o primeiro ponto foi atingido em 1s e todos os outros no 5o 
//: segundo, criamos o resultado como **Output(1,5)**.
//:
//: - Voc√™ pode criar classes, atributos e fun√ß√µes auxiliares da forma
//: que considerar necess√°rio para auxiliar sua resolu√ß√£o. √â necess√°rio
//: apenas garantir que a interface com outors trechos de c√≥digo seja feita
//: pela fun√ß√£o **execute** da classe **ColoniaDeBacterias**.
//:
//: - Use a fun√ß√£o **print** ou os recursos do *playground* para depurar seu
//: c√≥digo.


//: [Pr√≥ximo](@next)
